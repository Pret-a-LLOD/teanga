#!/bin/bash
# $# is the number of given spaced inputs
# we want to convert spaced inputs into a matched scenario (the first 1 or 2 inputs should dtermine it
# and a list of given parameters)

default_option=FAIL

AVAILABLE_SERVICES=("service" "workflow" "global")
AVAILABLE_GLOBAL_COMMANDS=("start" "stop" "create" "run")
AVAILABLE_CREATE_SERVICES=("workflow")
AVAILABLE_RUN_SERVICES=("workflow")
AVAILABLE_START_SERVICES=("global")
AVAILABLE_STOP_SERVICES=("global")
AVAILABLE_FLAGS=("-f" "-p" "--output-dir")
AVAILABLE_START_GLOBAL_FLAGS=("-f" "-p" "--output-dir")
AVAILABLE_CREATE_WORKFLOW_FLAGS=("-f")
AVAILABLE_RUN_WORKFLOW_FLAGS=("--id")

OPENAPI_FOLDERNAME="openapi-specifications"
WORKFLOWS_FOLDERNAME="workflows"
FILES_FOLDERNAME="files"
OUTPUT_FOLDERNAME="outputs"
REQUIRED_FOLDERS=("workflows","files","openapi-specifications","outputs")

DEFAULT_PORT=5000
IMAGE_NAME="pretallod/teanga-core"
#IMAGE_TAG=`date +"%m%Y"`
IMAGE_TAG=test

TEANGA_CONTAINER_NAME=teanga_backend

show_usage () {
    USAGE="Usage: $0 [COMMAND] [SERVICE]  [PARAMETERS] "
    echo $USAGE
    echo "Available SERVICES: "${AVAILABLE_SERVICES[@]}
	exit 1
}

get_teanga_backend_container_id () {
    TEANGA_BACKEND_CONTAINER_ID=`docker inspect -f   '{{.Id}}' $TEANGA_CONTAINER_NAME`
}
check_if_in_list () {
    VALID_COMMAND=0
    local INPUT=$1
    shift 1
    for AVAILABLE_COMMAND in "$@";
    do
        #echo $AVAILABLE_COMMAND
        if [[ "$INPUT" == "$AVAILABLE_COMMAND" ]];
        then
            VALID_COMMAND=1
        fi
    done
    if [ $VALID_COMMAND -eq 1 ];
    then
        :
    else
        show_usage
    fi
}


INPUT_COMMAND=$1
INPUT_COMMAND_UPPER=$(echo "$1" | tr '[:lower:]' '[:upper:]')
shift 1;
check_if_in_list $INPUT_COMMAND ${AVAILABLE_GLOBAL_COMMANDS[@]} 
if [ "$#" -eq "0" ]; 
then
    INPUT_SERVICE="global"
    INPUT_SERVICE_UPPER="GLOBAL"
    AVAILABLE_COMMANDS_FOR_SERVICE="AVAILABLE_GLOBAL_COMMANDS[@]"
    SERVICES_FOR_COMMAND_ARR="AVAILABLE_"$INPUT_COMMAND_UPPER"_SERVICES[@]"
    check_if_in_list $INPUT_SERVICE ${!SERVICES_FOR_COMMAND_ARR} 
    SCENARIO_NAME="${INPUT_COMMAND_UPPER}_${INPUT_SERVICE_UPPER}"
    CALLED_FUNCTION=$SCENARIO_NAME
else 
    if [[ $1 == -* ]] ;
    then
        INPUT_SERVICE="global"
        INPUT_SERVICE_UPPER="GLOBAL"
        AVAILABLE_COMMANDS_FOR_SERVICE="AVAILABLE_GLOBAL_COMMANDS[@]"
        SERVICES_FOR_COMMAND_ARR="AVAILABLE_"$INPUT_COMMAND_UPPER"_SERVICES[@]"
        check_if_in_list $INPUT_SERVICE ${!SERVICES_FOR_COMMAND_ARR} 
    else
        INPUT_SERVICE=$1
        INPUT_SERVICE_UPPER=$(echo "$1" | tr '[:lower:]' '[:upper:]')
        SERVICES_FOR_COMMAND_ARR="AVAILABLE_"$INPUT_COMMAND_UPPER"_SERVICES[@]"
        check_if_in_list $INPUT_SERVICE ${!SERVICES_FOR_COMMAND_ARR} 
        shift 1
    fi
    SCENARIO_NAME="${INPUT_COMMAND_UPPER}_${INPUT_SERVICE_UPPER}"
    CALLED_FUNCTION=$SCENARIO_NAME
    VALID_PARAMS=();
    while [[ -n "$@" ]];
    do
        INPUT_FLAG=$1
        shift 1;
        FLAGS_ARR="AVAILABLE_"$SCENARIO_NAME"_FLAGS[@]"
        check_if_in_list $INPUT_FLAG ${!FLAGS_ARR} 
        INPUT_PARAMETER=$1
        shift 1;
        VALID_PARAMS+=("${INPUT_FLAG}=${INPUT_PARAMETER}")
    done
    check_if_in_list $INPUT_SERVICE ${AVAILABLE_SERVICES[@]} 
fi




CREATE_WORKFLOW () {
    for str_PAIR in "$@";
    do
        arr_PAIR=(${str_PAIR//=/ })
        FLAG=${arr_PAIR[0]};
        PARAMETER=${arr_PAIR[1]};
        if [ "$FLAG" = "-f" ];
        then
            WORKFLOW_FILEPATH=$PARAMETER;
            FILENAME="${WORKFLOW_FILEPATH##*\/}"
        else
            show_usage;
        fi
        echo "-------";
    done
    WORKFLOW_TEANGA_FILENAME=`date +"%Y%m%d%H%M%S"`
    get_teanga_backend_container_id 
    #echo $TEANGA_BACKEND_CONTAINER_ID
    #cp $WORKFLOW_FILEPATH ./workflows/$FILENAME
    # need to check if file exists
    # need to check if teanga container id exists
    docker cp  $WORKFLOW_FILEPATH $TEANGA_BACKEND_CONTAINER_ID:/teanga/workflows/$WORKFLOW_TEANGA_FILENAME\_$FILENAME 
    docker exec teanga_backend python3 /teanga/create_dag.py /teanga/workflows/$WORKFLOW_TEANGA_FILENAME\_$FILENAME
    echo Workflow id is : $WORKFLOW_TEANGA_FILENAME\_$FILENAME
}


RUN_WORKFLOW () {
    for str_PAIR in "$@";
    do
        arr_PAIR=(${str_PAIR//=/ })
        FLAG=${arr_PAIR[0]};
        PARAMETER=${arr_PAIR[1]};
        if [ "$FLAG" = "--id" ];
        then
            WORKFLOW_ID=$PARAMETER;
        else
            show_usage;
        fi
        echo "-------";
    done
    get_teanga_backend_container_id 
    docker exec $TEANGA_BACKEND_CONTAINER_ID airflow trigger_dag $WORKFLOW_ID 
}

START_GLOBAL () {
    if [[ -z $(docker ps | awk '/teanga/ {print $1}') ]];
    then
        echo "Starting Teanga";
    else
        echo "Teanga is already running";
        exit
    fi
    for str_PAIR in "$@";
    do
        arr_PAIR=(${str_PAIR//=/ })
        FLAG=${arr_PAIR[0]};
        PARAMETER=${arr_PAIR[1]};
        if [ "$FLAG" = "-p" ];
        then
                PORT=$PARAMETER;
        else
            show_usage;
        fi
    done

    if [ -z "$PORT" ];
    then
        PORT=$DEFAULT_PORT;
    fi

    mkdir -p $PWD/$WORKFLOWS_FOLDERNAME
    mkdir -p $PWD/$OPENAPI_FOLDERNAME
    mkdir -p $PWD/$FILES_FOLDERNAME
    mkdir -p $PWD/$OUTPUT_FOLDERNAME
    docker run -dt --rm --name $TEANGA_CONTAINER_NAME \
               -v /var/run/docker.sock:/var/run/docker.sock \
               -v $PWD/$WORKFLOWS_FOLDERNAME:/teanga/workflows \
               -v $PWD/$OPENAPI_FOLDERNAME:/teanga/OAS \
               -v $PWD/$FILES_FOLDERNAME:/teanga/files \
               -v $PWD/$OUTPUT_FOLDERNAME:/teanga/outputs \
               -e TEANGA_DIR=$PWD \
               -p $PORT:8080 \
               $IMAGE_NAME:$IMAGE_TAG
    echo "Teanga UI is running in port: $PORT"
}

STOP_GLOBAL () {
    if [[ -z $(docker ps | awk '/teanga/ {print $1}') ]];
    then
        echo "Teanga is not running";
        exit
    else
        echo "Shutting down teanga";
        docker stop $(docker ps | awk '/teanga/ {print $1}')
        echo "Teanga is shutdown"
    fi
}


$CALLED_FUNCTION ${VALID_PARAMS[@]}
