(this["webpackJsonpreact-flow-101"]=this["webpackJsonpreact-flow-101"]||[]).push([[0],{53:function(e,t,a){},55:function(e,t,a){},58:function(e,t,a){},84:function(e,t,a){"use strict";a.r(t);var r=a(1),o=a(14),n=a.n(o),s=(a(53),a(15)),c=a.n(s),i=a(29),p=a(25),l=a(47),d=a(22),m=a(5),g=a(13),u=(a(55),a(3)),h=function(e){var t=e.data;return Object(u.jsxs)("div",{className:t.selected?"flowchart-operator-new selected-node":"flowchart-operator-new",children:[Object(u.jsx)(g.c,{className:"handle-left",type:"target",position:"left"}),Object(u.jsx)("div",{className:"handle-title",children:t.label}),Object(u.jsx)(g.c,{className:"handle-right",type:"source",position:"right",style:{borderRadius:0}})]})},b=function(e){var t=e.id,a=e.sourceX,r=e.sourceY,o=e.targetX,n=e.targetY,s=e.sourcePosition,c=e.targetPosition,i=e.style,p=void 0===i?{strokeWidth:10,stroke:"rgb(92, 184, 92)"}:i,l=e.data,d=e.arrowHeadType,m=e.markerEndId,h=Object(g.f)({sourceX:a,sourceY:r,sourcePosition:s,targetX:o,targetY:n,targetPosition:c}),b=Object(g.g)(d,m);return Object(u.jsxs)(u.Fragment,{children:[Object(u.jsx)("path",{id:t,style:p,className:"react-flow__edge-path",d:h,markerEnd:b}),Object(u.jsx)("text",{children:Object(u.jsx)("textPath",{href:"#".concat(t),style:{fontSize:"12px"},startOffset:"50%",textAnchor:"middle",children:l.type})})]})},_=a(90),j=a(91);a(57);var f=function(e){var t=e.name,a=(e.key,e.selected),r=e.dispatch;return Object(u.jsx)(_.a,{border:a?"danger":"primary",style:{marginLeft:"0.5vw",marginRight:"0.5vw",width:"15vw",borderRadius:"10px"},children:Object(u.jsxs)(_.a.Body,{children:[Object(u.jsx)(_.a.Title,{style:{maxWidth:"90%",fontSize:"10px"},children:t}),Object(u.jsx)(j.a,{variant:"primary",size:"sm",style:{maxWidth:"90%",fontSize:"10px"},onClick:function(){r({type:U.ADD_NODE,payload:{name:t}})},children:"Add to Workflow"})]})})},k=a(41),O=a.n(k),y=a(88),x=a(42),w=a(87);a(58);var E=function(e){var t=e.services,a=e.input,o=e.dispatch,n=Object(r.useState)(t[0].name),s=Object(p.a)(n,2),c=s[0],i=s[1],l=function(e){var t=e.text,a=e.selected;return Object(u.jsx)(f,{name:t,className:"menu-item",selected:a,dispatch:o},t)},d=function(e){var t=e.text,a=e.className;return Object(u.jsx)("div",{style:{border:"2px solid black"},className:a,children:t})},m=d({text:"<",className:"arrow-prev"}),g=d({text:">",className:"arrow-next"}),h=function(e,t){return e.filter((function(e){return e.name.includes(a)})).map((function(e){var a=e.name;return Object(u.jsx)(l,{text:a,selected:t},a)}))}(t,c);return Object(u.jsxs)(w.a,{children:[Object(u.jsxs)(y.a,{size:"sm",className:"mb-3",children:[Object(u.jsx)(y.a.Prepend,{children:Object(u.jsx)(y.a.Text,{id:"inputGroup-sizing-sm",children:"Search : "})}),Object(u.jsx)(x.a,{className:"searchbar-input","aria-label":"Small","aria-describedby":"inputGroup-sizing-sm",type:"text",value:a,onChange:function(e){return o({type:U.UPDATE_INPUT,payload:{input:e.target.value}})}})]}),Object(u.jsx)(O.a,{style:{width:"100%"},data:h,arrowLeft:m,arrowRight:g,selected:c,onSelect:function(e){i(e)}})]})},v=a(89),C=a(20);var P=function(e){var t=e.node,a=(e.selectedPath,e.paths),r=e.methods,o=e.parameters,n=e.requestBody,s=e.dispatch;if(n)var c=Object.keys(n.content).map((function(e){return Object(u.jsx)("option",{children:e})}));else c=[];return Object(u.jsxs)("div",{style:{position:"fixed",top:"50px",left:"0",height:"100%",width:"30%",zIndex:999,border:"2px solid black",background:"white",overflowY:"auto"},children:[Object(u.jsxs)("h3",{children:[" ",t.data.label," "]}),Object(u.jsx)(j.a,{variant:"primary",type:"submit",style:{marginTop:"-70px",marginLeft:"100%"},onClick:function(){return s({type:U.UNSELECT_NODE,payload:{id:t.id}})},children:Object(u.jsx)(C.a,{})}),Object(u.jsxs)(v.a,{children:[Object(u.jsxs)(v.a.Group,{className:"service-leftbar-group",controlId:"exampleForm.ControlSelect1",children:[Object(u.jsx)(v.a.Label,{children:"Select an Endpoint"}),Object(u.jsx)(v.a.Control,{as:"select",defaultValue:t.workflow.selectedPath,onChange:function(e){return s({type:U.SELECT_FORM_VALUE,payload:{field:"selectedPath",value:e.target.value}})},children:a.map((function(e){return Object(u.jsx)("option",{children:e})}))})]}),Object(u.jsxs)(v.a.Group,{className:"service-leftbar-group",controlId:"exampleForm.ControlSelect2",children:[Object(u.jsx)(v.a.Label,{children:"Select an Request method"}),Object(u.jsx)(v.a.Control,{as:"select",defaultValue:t.workflow.selectedMethod,onChange:function(e){return s({type:U.SELECT_FORM_VALUE,payload:{field:"requestBody",value:e.target.value}})},children:r.map((function(e){return Object(u.jsx)("option",{children:e})}))})]}),n?Object(u.jsxs)(v.a.Group,{className:"service-leftbar-group",controlId:"exampleForm.ControlSelect2",children:[Object(u.jsx)(v.a.Label,{children:"Select a Request Body "}),Object(u.jsx)(v.a.Control,{as:"select",onChange:function(e){return s({type:U.SELECT_FORM_VALUE,payload:{field:"selectedMethod",value:e.target.value}})},children:c}),Object(u.jsx)(v.a.Control,{as:"textarea",rows:3,onChange:function(e){return s({type:U.SELECT_FORM_VALUE,payload:{field:"requestBody",value:JSON.parse(e.target.value)}})}})]}):"",Object(u.jsx)("h3",{children:" Parameters "}),Object(u.jsx)(v.a.Group,{className:"service-leftbar-group",children:o?o.map((function(e){return Object(u.jsxs)(u.Fragment,{children:[Object(u.jsxs)(v.a.Label,{children:[e.name," (",e.required?"required":"optional",") "]}),Object(u.jsx)(v.a.Control,{type:"text",defaultValue:t.workflow[e.name]?t.workflow[e.name]:"Enter parameter value",placeholder:"Enter parameter value",onChange:function(t){return s({type:U.SELECT_FORM_VALUE,payload:{field:e.name,value:t.target.value}})}})]})})):""})]}),Object(u.jsx)(j.a,{className:"service-leftbar-button",variant:"primary",type:"submit",style:{marginBottom:"100px"},onClick:function(e){return s({type:U.UNSELECT_NODE,payload:{id:t.id}})},children:"Save Inputs"})]})};var N=function(e){var t=e.edge,a=e.operators,r=e.dispatch;return Object(u.jsxs)("div",{style:{position:"fixed",top:"50px",left:"0",height:"100%",width:"30%",zIndex:999,border:"2px solid black",background:"white",overflowY:"auto"},children:[Object(u.jsxs)("h3",{children:[" ",t.data.type," "]}),Object(u.jsx)(v.a,{children:Object(u.jsxs)(v.a.Group,{className:"service-leftbar-group",controlId:"exampleForm.ControlSelect1",children:[Object(u.jsx)(v.a.Label,{children:"Select an Endpoint"}),Object(u.jsx)(v.a.Control,{as:"select",onChange:function(e){return r({type:U.UPDATE_EDGE_TYPE,payload:{field:"type",value:e.target.value}})},children:a.map((function(e){return Object(u.jsx)("option",{children:e})}))})]})}),Object(u.jsx)(j.a,{className:"service-leftbar-button",variant:"primary",type:"submit",style:{marginBottom:"100px"},onClick:function(e){return r({type:U.UNSELECT_EDGE,payload:{id:t.id}})},children:"Save Inputs"})]})},T=a(30);var D=function(){return Object(u.jsx)(T.a,{bg:"dark",variant:"dark",fixed:"top",expand:"lg",style:{height:"50px"},children:Object(u.jsx)(T.a.Brand,{href:"#home",children:Object(u.jsxs)("a",{class:"navbar-brand",style:{position:"fixed",left:"5%",marginTop:"-25px"},href:"../platform",children:[Object(u.jsx)("img",{class:"pull-left",src:"/static/images/teanga-logo-white.svg",height:"40"})," \xa0",Object(u.jsx)("span",{class:"name",children:Object(u.jsx)("span",{class:"beta",children:"MVP"})})]})})})},S=a(45),L=a(46),I=a.n(L),M={teangaNode:h},A={teangaEdge:b},R={node_count:0,input:"",selected_nodeId:"",selected_edgeId:"",selectedPath:"",selectedMethod:"",methods:[],paths:[],requestBody:{},services:[{name:"SWC - Chunker",url:"https://raw.githubusercontent.com/berstearns/personal/main/swcchunker",repo:"berstearns",image_id:"teanga-swc-chunker",image_tag:"122021",host_port:8001,container_port:8080},{name:"DKPRO pos tagger",url:"https://raw.githubusercontent.com/berstearns/personal/main/postagger",repo:"berstearns",image_id:"teanga-postagger",image_tag:"122021",host_port:8001,container_port:8080},{name:"dummy teanga",url:"https://raw.githubusercontent.com/berstearns/personal/main/dummy.yaml",repo:"berstearns",image_id:"dummy_teanga_service",image_tag:"042021",host_port:8001,container_port:8080},{name:"dkpro-treetagger",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro.yaml",repo:"berstearns",image_id:"teanga-dkpro-wrapper",image_tag:"032021",host_port:8001,container_port:8080},{name:"naisc",url:"https://raw.githubusercontent.com/berstearns/personal/main/naisc.yaml",repo:"berstearns",image_id:"naisc",image_tag:"latest",host_port:8001,container_port:8080},{name:"dkpro-core-api-featurepath-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-api-featurepath-asl",repo:"berstearns",image_id:"teanga-dkpro-core-api-featurepath-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-api-segmentation-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-api-segmentation-asl",repo:"berstearns",image_id:"teanga-dkpro-core-api-segmentation-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-arktools-gpl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-arktools-gpl",repo:"berstearns",image_id:"teanga-dkpro-core-arktools-gpl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-berkeleyparser-gpl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-berkeleyparser-gpl",repo:"berstearns",image_id:"teanga-dkpro-core-berkeleyparser-gpl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-castransformation-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-castransformation-asl",repo:"berstearns",image_id:"teanga-dkpro-core-castransformation-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-clearnlp-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-clearnlp-asl",repo:"berstearns",image_id:"teanga-dkpro-core-clearnlp-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-commonscodec-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-commonscodec-asl",repo:"berstearns",image_id:"teanga-dkpro-core-commonscodec-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-corenlp-gpl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-corenlp-gpl",repo:"berstearns",image_id:"teanga-dkpro-core-corenlp-gpl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-decompounding-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-decompounding-asl",repo:"berstearns",image_id:"teanga-dkpro-core-decompounding-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-dictionaryannotator-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-dictionaryannotator-asl",repo:"berstearns",image_id:"teanga-dkpro-core-dictionaryannotator-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-frequency-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-frequency-asl",repo:"berstearns",image_id:"teanga-dkpro-core-frequency-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-gate-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-gate-asl",repo:"berstearns",image_id:"teanga-dkpro-core-gate-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-hunpos-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-hunpos-asl",repo:"berstearns",image_id:"teanga-dkpro-core-hunpos-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-io-text-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-io-text-asl",repo:"berstearns",image_id:"teanga-dkpro-core-io-text-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-io-tgrep-gpl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-io-tgrep-gpl",repo:"berstearns",image_id:"teanga-dkpro-core-io-tgrep-gpl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-io-web1t-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-io-web1t-asl",repo:"berstearns",image_id:"teanga-dkpro-core-io-web1t-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-ixa-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-ixa-asl",repo:"berstearns",image_id:"teanga-dkpro-core-ixa-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-jazzy-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-jazzy-asl",repo:"berstearns",image_id:"teanga-dkpro-core-jazzy-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-langdetect-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-langdetect-asl",repo:"berstearns",image_id:"teanga-dkpro-core-langdetect-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-languagetool-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-languagetool-asl",repo:"berstearns",image_id:"teanga-dkpro-core-languagetool-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-ldweb1t-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-ldweb1t-asl",repo:"berstearns",image_id:"teanga-dkpro-core-ldweb1t-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-lingpipe-gpl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-lingpipe-gpl",repo:"berstearns",image_id:"teanga-dkpro-core-lingpipe-gpl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-mallet-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-mallet-asl",repo:"berstearns",image_id:"teanga-dkpro-core-mallet-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-maltparser-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-maltparser-asl",repo:"berstearns",image_id:"teanga-dkpro-core-maltparser-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-matetools-gpl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-matetools-gpl",repo:"berstearns",image_id:"teanga-dkpro-core-matetools-gpl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-maui-gpl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-maui-gpl",repo:"berstearns",image_id:"teanga-dkpro-core-maui-gpl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-morpha-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-morpha-asl",repo:"berstearns",image_id:"teanga-dkpro-core-morpha-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-mstparser-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-mstparser-asl",repo:"berstearns",image_id:"teanga-dkpro-core-mstparser-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-ngrams-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-ngrams-asl",repo:"berstearns",image_id:"teanga-dkpro-core-ngrams-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-nlp4j-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-nlp4j-asl",repo:"berstearns",image_id:"teanga-dkpro-core-nlp4j-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-norvig-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-norvig-asl",repo:"berstearns",image_id:"teanga-dkpro-core-norvig-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-opennlp-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-opennlp-asl",repo:"berstearns",image_id:"teanga-dkpro-core-opennlp-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-performance-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-performance-asl",repo:"berstearns",image_id:"teanga-dkpro-core-performance-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-posfilter-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-posfilter-asl",repo:"berstearns",image_id:"teanga-dkpro-core-posfilter-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-readability-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-readability-asl",repo:"berstearns",image_id:"teanga-dkpro-core-readability-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-rftagger-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-rftagger-asl",repo:"berstearns",image_id:"teanga-dkpro-core-rftagger-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-sfst-gpl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-sfst-gpl",repo:"berstearns",image_id:"teanga-dkpro-core-sfst-gpl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-stanfordnlp-gpl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-stanfordnlp-gpl",repo:"berstearns",image_id:"teanga-dkpro-core-stanfordnlp-gpl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-testing-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-testing-asl",repo:"berstearns",image_id:"teanga-dkpro-core-testing-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-textcat-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-textcat-asl",repo:"berstearns",image_id:"teanga-dkpro-core-textcat-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-textnormalizer-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-textnormalizer-asl",repo:"berstearns",image_id:"teanga-dkpro-core-textnormalizer-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-tokit-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-tokit-asl",repo:"berstearns",image_id:"teanga-dkpro-core-tokit-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-treetagger-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-treetagger-asl",repo:"berstearns",image_id:"teanga-dkpro-core-treetagger-asl",image_tag:"122021",host_port:8001,container_port:8080},{name:"dkpro-core-udpipe-asl",url:"https://raw.githubusercontent.com/berstearns/personal/main/dkpro-core-udpipe-asl",repo:"berstearns",image_id:"teanga-dkpro-core-udpipe-asl",image_tag:"122021",host_port:8001,container_port:8080}],operators:["pass","wait","forEach","concatenate","merge"],elements:[]},U={SET_OPENAPI:"set-openapi",CREATE_WORKFLOW:"create-workflow",UPDATE_INPUT:"update-input",ADD_NODE:"add-node",ADD_EDGE:"add-edge",SELECT_NODE:"select-node",UNSELECT_NODE:"unselect-node",SELECT_EDGE:"select-edge",REMOVE_SELECTED_NODE:"remove-selected-node",SELECT_FORM_VALUE:"select-form-value",UPDATE_EDGE_TYPE:"update-edge-type"};function z(e,t){switch(t.type){case U.SET_OPENAPI:return C=Object(m.a)(Object(m.a)({},e),{},{services:e.services.map((function(e,a){return Object(m.a)(Object(m.a)({},e),{},{openapi:t.payload.openapi_yamls[a]})}))});case U.CREATE_WORKFLOW:console.log("state services",e.services);var a,r={},o=Object(d.a)(e.elements);try{for(o.s();!(a=o.n()).done;){var n=a.value;if("teangaNode"===n.type){r.hasOwnProperty(n.id)||(r[n.id]=Object(m.a)({},n.workflow));var s,c=Object(d.a)(e.elements);try{for(c.s();!(s=c.n()).done;){var i=s.value;"teangaEdge"===i.type&&i.target===n.id&&(r[n.id].dependencies=[].concat(Object(l.a)(r[n.id].dependencies),[i]))}}catch(A){c.e(A)}finally{c.f()}}}}catch(A){o.e(A)}finally{o.f()}for(var u=0,h=Object.keys(r);u<h.length;u++){var b=h[u];for(var _ in r[b].dependencies){var j=r[b].dependencies[_];r[b].dependencies[_]={operator:j.data.type,steps:[j.source]}}}return console.log(r),I.a.post("/admin/ping",r).then((function(e){alert("creation sucessful"),window.resp=e,window.location="/admin/"})).catch((function(e){alert("creation failed :(")})),Object(m.a)({},e);case U.UPDATE_INPUT:return Object(m.a)(Object(m.a)({},e),{},{input:t.payload.input});case U.ADD_NODE:var f=e.services.filter((function(e){return e.name===t.payload.name}))[0],k=f.openapi;console.log(f);var O=(S=Object.keys(k.paths).map((function(e){return e})))[0],y=(L=Object.keys(k.paths[O]))[0],x=k.paths[O][y].parameters,w=k.paths[O][y].requestBody,E=k.paths[O][y].operationId,v={id:(e.node_count+1).toString(),type:"teangaNode",data:{label:t.payload.name,selected:!1,openapi:k},workflow:{selectedPath:O,selectedMethod:y,operation_id:E,repo:f.repo,image_id:f.image_id,image_tag:f.image_tag,host_port:f.host_port,container_port:f.container_port,input:{},dependencies:[]},position:{x:50,y:50}},C=Object(m.a)(Object(m.a)({},e),{},{node_count:e.node_count+1,elements:e.elements.concat(v)});return console.log(C),C;case U.ADD_EDGE:console.log(t.payload.params);var P=Object(g.d)(t.payload.params,[e.elements[0],e.elements[0]]),N=Object(p.a)(P,3),T=(N[0],N[1],N[2]);return C=Object(m.a)(Object(m.a)({},e),{},{node_count:e.node_count+1,elements:e.elements.concat(T)});case U.SELECT_EDGE:return C=Object(m.a)(Object(m.a)({},e),{},{selected_edgeId:t.payload.id,elements:e.elements.map((function(e){return e.id===t.payload.id?Object(m.a)(Object(m.a)({},e),{},{data:Object(m.a)(Object(m.a)({},e.data),{},{selected:!e.data.selected})}):Object(m.a)(Object(m.a)({},e),{},{data:Object(m.a)(Object(m.a)({},e.data),{},{selected:!1})})}))});case U.UNSELECT_EDGE:return C=Object(m.a)(Object(m.a)({},e),{},{selected_edgeId:"",elements:e.elements.map((function(e){return e.id,t.payload.id,Object(m.a)(Object(m.a)({},e),{},{data:Object(m.a)(Object(m.a)({},e.data),{},{selected:!1})})}))});case U.SELECT_NODE:if(""!==(M=e.selected_nodeId==t.payload.id?"":t.payload.id)){var D=e.elements.filter((function(e){return e.id===M}))[0],S=Object.keys(D.data.openapi.paths).map((function(e){return e})),L=(O=D.workflow.selectedPath,Object.keys(D.data.openapi.paths[O]));y=D.workflow.selectedMethod,x=D.data.openapi.paths[O][y].parameters?D.data.openapi.paths[O][y].parameters:[],w=D.data.openapi.paths[O][y].requestBody?D.data.openapi.paths[O][y].requestBody:""}else S=[],O="",L=[],y="",x=[],w={};return C=Object(m.a)(Object(m.a)({},e),{},{selected_nodeId:M,selectedPath:O,methods:L,selectedMethod:y,paths:S,parameters:x,requestBody:w,elements:e.elements.map((function(e){return e.id===t.payload.id?Object(m.a)(Object(m.a)({},e),{},{data:Object(m.a)(Object(m.a)({},e.data),{},{selected:!e.data.selected})}):Object(m.a)(Object(m.a)({},e),{},{data:Object(m.a)(Object(m.a)({},e.data),{},{selected:!1})})}))});case U.UNSELECT_NODE:return C=Object(m.a)(Object(m.a)({},e),{},{selected_nodeId:"",selectedPath:"",selectedMethod:"",methods:[],paths:[],elements:e.elements.map((function(e){return e.id,t.payload.id,Object(m.a)(Object(m.a)({},e),{},{data:Object(m.a)(Object(m.a)({},e.data),{},{selected:!1})})}))});case U.REMOVE_SELECTED_NODE:return C=Object(m.a)(Object(m.a)({},e),{},{selected_nodeId:"",elements:e.elements.filter((function(e){return e.id!==t.payload.id&&(e.source!==t.payload.id&&e.target!==t.payload.id)}))});case U.SELECT_FORM_VALUE:var M=e.selected_nodeId;k=(v=e.elements.filter((function(e){return e.id===M}))[0]).data.openapi,S=Object.keys(v.data.openapi.paths).map((function(e){return e})),O="selectedPath"==t.payload.field?t.payload.value:e.selectedPath,L=Object.keys(v.data.openapi.paths[O]);if("selectedMethod"==t.payload.field)y=t.payload.value;else if(-1!==L.indexOf(e.selectedMethod))y=e.selectedMethod;else y=L[0];x=k.paths[O][y].parameters;if(-1===["selectedPath","selectedMethod"].indexOf(t.payload.field))v.workflow.input[t.payload.field]=t.payload.value;else{E=k.paths[O][y].operationId;v.workflow=Object(m.a)(Object(m.a)({},v.workflow),{},{selectedPath:O,selectedMethod:y,operation_id:E})}return console.log(v),C=Object(m.a)(Object(m.a)({},e),{},{elements:e.elements.map((function(e){return e.id===M?v:e})),selectedPath:O,methods:L,selectedMethod:y,parameters:x});case U.UPDATE_EDGE_TYPE:M=e.selected_nodeId,k=(v=e.elements.filter((function(e){return e.id===M}))[0]).data.openapi,S=Object.keys(v.data.openapi.paths).map((function(e){return e})),O="selectedPath"==t.payload.field?t.payload.value:e.selectedPath,L=Object.keys(v.data.openapi.paths[O]);if("selectedMethod"==t.payload.field)y=t.payload.value;else if(-1!==L.indexOf(e.selectedMethod))y=e.selectedMethod;else y=L[0];x=k.paths[O][y].parameters;if(-1===["selectedPath","selectedMethod"].indexOf(t.payload.field))v.workflow.input[t.payload.field]=t.payload.value;else{E=k.paths[O][y].operationId;v.workflow=Object(m.a)(Object(m.a)({},v.workflow),{},{selectedPath:O,selectedMethod:y,operation_id:E})}return console.log(v),C=Object(m.a)(Object(m.a)({},e),{},{elements:e.elements.map((function(e){return e.id===M?v:e})),selectedPath:O,methods:L,selectedMethod:y,parameters:x});default:return e}}var F=function(){var e=Object(r.useReducer)(z,R),t=Object(p.a)(e,2),a=t[0],o=t[1];return Object(r.useEffect)(Object(i.a)(c.a.mark((function e(){var t,r;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=a.services.map(function(){var e=Object(i.a)(c.a.mark((function e(t){var a,r;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(t.url).then((function(e){return e.text()}));case 2:return a=e.sent,r=Object(S.parse)(a),e.abrupt("return",r);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()),e.next=3,Promise.all(t);case 3:r=e.sent,o({type:U.SET_OPENAPI,payload:{openapi_yamls:r}});case 5:case"end":return e.stop()}}),e)}))),[]),Object(u.jsxs)(u.Fragment,{children:[Object(u.jsx)(D,{}),Object(u.jsxs)("div",{style:{width:"100%"},children:[Object(u.jsx)("h3",{style:{display:"inline-block","margin-left":"5%","margin-top":"5%"},children:" Build a workflow from the Flow Diagram "}),Object(u.jsx)(j.a,{variant:"primary",size:"lg",style:{maxWidth:"90%",fontSize:"10px",marginLeft:"30%"},onClick:function(){o({type:U.CREATE_WORKFLOW,payload:{}})},children:"Create Workflow"})]}),a.selected_nodeId?Object(u.jsx)(P,{node:a.elements.filter((function(e){return e.id===a.selected_nodeId}))[0],dispatch:o,selectedPath:a.selectedPath,paths:a.paths,methods:a.methods,selectedMethod:a.selectedMethod,parameters:a.parameters,requestBody:a.requestBody}):"",a.selected_edgeId?Object(u.jsx)(N,{edge:a.elements.filter((function(e){return e.id===a.selected_edgeId}))[0],operators:a.operators,dispatch:o}):"",Object(u.jsxs)("div",{style:{background:"white",border:"2px solid black",padding:"5% 5% 5% 5%",width:"90%",marginLeft:"auto",marginRight:"auto",marginTop:"3%"},children:[Object(u.jsx)(E,{services:a.services,dispatch:o,input:a.input}),Object(u.jsx)("div",{id:"chart_area",children:Object(u.jsx)(g.e,{elements:a.elements,onConnect:function(e){return o({type:U.ADD_EDGE,payload:{params:Object(m.a)(Object(m.a)({},e),{},{id:(a.node_count+1).toString(),type:"teangaEdge",data:{type:"pass"}})}})},onElementClick:function(e,t){t.source?o({type:U.SELECT_EDGE,payload:{id:t.id}}):t.id&&o({type:U.SELECT_NODE,payload:{id:t.id}})},nodeTypes:M,edgeTypes:A,children:Object(u.jsx)(g.b,{style:{marginLeft:"95%"},children:Object(u.jsx)(g.a,{onClick:function(){return o({type:U.REMOVE_SELECTED_NODE,payload:{id:a.selected_nodeId}})},children:Object(u.jsx)(C.a,{})})})})})]})]})};n.a.render(Object(u.jsx)(F,{}),document.getElementById("root"))}},[[84,1,2]]]);
//# sourceMappingURL=main.3e9f322c.chunk.js.map