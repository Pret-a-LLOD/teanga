#!/bin/bash

AVAILABLE_SERVICES=("service" "workflow")
AVAILABLE_WORKFLOW_COMMANDS=("run" "create" "visualize")
AVAILABLE_FLAGS=("-f" "-p" "--output-dir")
show_usage () {
    USAGE="Usage: $0 [COMMAND] [SERVICE]  [PARAMETERS] "
    echo $USAGE
    echo "Available SERVICES: "${AVAILABLE_SERVICES[@]}
	exit 1
}

check_if_in_list () {
    VALID_COMMAND=0
    local INPUT=$1
    shift 1
    for AVAILABLE_COMMAND in "$@";
    do
        if [[ "$INPUT" == "$AVAILABLE_COMMAND" ]];
        then
            VALID_COMMAND=1
        fi
    done
    if [ $VALID_COMMAND -eq 1 ];
    then
        :
    else
        show_usage
    fi
}

if [ "$#" -lt "2" ]; then
    show_usage
fi

INPUT_COMMAND=$1
INPUT_COMMAND_UPPER=$(echo "$1" | tr '[:lower:]' '[:upper:]')
shift 1
INPUT_SERVICE=$1
INPUT_SERVICE_UPPER=$(echo "$1" | tr '[:lower:]' '[:upper:]')
shift 1

AVAILABLE_COMMANDS_FOR_SERVICE="AVAILABLE_"$INPUT_SERVICE_UPPER"_COMMANDS[@]"
check_if_in_list $INPUT_COMMAND ${!AVAILABLE_COMMANDS_FOR_SERVICE} 
echo "  "
check_if_in_list $INPUT_SERVICE ${AVAILABLE_SERVICES[@]} 

VALID_PARAMS=();
while [[ -n "$@" ]];
do
    INPUT_FLAG=$1
    shift 1;
    check_if_in_list $INPUT_FLAG ${AVAILABLE_FLAGS[@]} 
    INPUT_PARAMETER=$1
    shift 1;
    VALID_PARAMS+=("${INPUT_FLAG}=${INPUT_PARAMETER}")
done

RUN_WORKFLOW () {
    for str_PAIR in "$@";
    do
        arr_PAIR=(${str_PAIR//=/ })
        FLAG=${arr_PAIR[0]};
        PARAMETER=${arr_PAIR[1]};
        if [ "$FLAG" = "-f" ];
        then
            WORKFLOW_FILEPATH=$PARAMETER;
            FILENAME="${WORKFLOW_FILEPATH##*\/}"
        elif [ "$FLAG" = "-p" ];
        then
            PORT=$PARAMETER;
            echo $PORT;
        else
            show_usage;
        fi
        echo "-------";
    done
    if [ -z "$PWD" ]
    then
          echo "\$PWD is empty, trying to set $PWD with $(pwd)"
          PWD=$(pwd)
    else
          echo "\$PWD is ${PWD}, so using it as base_folder"
    fi
    mkdir -p IO
    mkdir -p OAS
    mkdir -p workflows
    cp $WORKFLOW_FILEPATH ./workflows/$FILENAME
    docker run -dt --rm --name teanga_backend \
               -v /var/run/docker.sock:/var/run/docker.sock \
               -v $PWD/workflows:/teanga/workflows \
               -v $PWD/OAS:/teanga/OAS \
               -e TEANGA_DIR=$PWD \
               -e TARGET_WORKFLOW=$FILENAME \
               -e RUN_DAG=true \
               -p $PORT:8080 \
               berstearns/teanga-core:`date +"%m%Y"`
}

CALLED_FUNCTION="${INPUT_COMMAND_UPPER}_${INPUT_SERVICE_UPPER}"
$CALLED_FUNCTION ${VALID_PARAMS[@]}
