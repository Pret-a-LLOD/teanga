{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Teanga Teanga is a command-line tool that automates and facilitates using sequences of containerized rest api as a workflow. It aims at creation of complex Natural Language Processing workflows using Airflow, OpenAPI specification and docker. Our code is open-source and available in GitHub . Installation Teanga can be installed only through a Command Line Interface/Terminal and requires Docker to be installed on your computer. If you have wget command installed in your terminal: sudo wget -O - https://raw.githubusercontent.com/Pret-a-LLOD/teanga/master/CLI/install.sh | sudo bash If you have curl command installed in your terminal: sudo curl https://raw.githubusercontent.com/Pret-a-LLOD/teanga/master/CLI/install.sh | sudo bash Quick Start 1.Download the workflow example or Create your own workflow file following Creating a new Workflow in Teanga . 2.Start Teanga and Run Workflow: teanga start teanga create workflow -f ./workflows/my_teanga_workflow.json teanga run worflow {my_workflow_id} Commands teanga start - Start Teanga backend and UI. teanga stop - Stop Teanga backend and UI. teanga create workflow -f {filepath} - creates a workflow through the command line teanga run workflow --id {workflow_id} - Runs a workflow through the command line Tutorials (Under construction, Most tutorials are empty) Teanga Start UI - Start Teanga backend and UI. Shutdown Teanga - Stop Teanga backend and UI. Teanga Run Existing Workflow - Start Teanga backend and UI. Creating a new Workflow in Teanga - Create a workflow from a workflow description json file. Creating a new Service in Teanga - Step by step for developers create a rest api for teanga. List of available services in teanga - Existing teanga services. List of example Workflows - Start Teanga backend and UI.","title":"Home"},{"location":"#welcome-to-teanga","text":"Teanga is a command-line tool that automates and facilitates using sequences of containerized rest api as a workflow. It aims at creation of complex Natural Language Processing workflows using Airflow, OpenAPI specification and docker. Our code is open-source and available in GitHub .","title":"Welcome to Teanga"},{"location":"#installation","text":"Teanga can be installed only through a Command Line Interface/Terminal and requires Docker to be installed on your computer. If you have wget command installed in your terminal: sudo wget -O - https://raw.githubusercontent.com/Pret-a-LLOD/teanga/master/CLI/install.sh | sudo bash If you have curl command installed in your terminal: sudo curl https://raw.githubusercontent.com/Pret-a-LLOD/teanga/master/CLI/install.sh | sudo bash","title":"Installation"},{"location":"#quick-start","text":"1.Download the workflow example or Create your own workflow file following Creating a new Workflow in Teanga . 2.Start Teanga and Run Workflow: teanga start teanga create workflow -f ./workflows/my_teanga_workflow.json teanga run worflow {my_workflow_id}","title":"Quick Start"},{"location":"#commands","text":"teanga start - Start Teanga backend and UI. teanga stop - Stop Teanga backend and UI. teanga create workflow -f {filepath} - creates a workflow through the command line teanga run workflow --id {workflow_id} - Runs a workflow through the command line","title":"Commands"},{"location":"#tutorials-under-construction-most-tutorials-are-empty","text":"Teanga Start UI - Start Teanga backend and UI. Shutdown Teanga - Stop Teanga backend and UI. Teanga Run Existing Workflow - Start Teanga backend and UI. Creating a new Workflow in Teanga - Create a workflow from a workflow description json file. Creating a new Service in Teanga - Step by step for developers create a rest api for teanga. List of available services in teanga - Existing teanga services. List of example Workflows - Start Teanga backend and UI.","title":"Tutorials (Under construction, Most tutorials are empty)"},{"location":"available_services/","text":"","title":"Available services"},{"location":"available_workflows/","text":"","title":"Available workflows"},{"location":"create_new_service/","text":"","title":"Create new service"},{"location":"create_new_workflow/","text":"","title":"Create new Workflow"},{"location":"run_existing_workflow/","text":"","title":"Run Existing Workflow"},{"location":"start_teanga/","text":"Teanga UI The teanga UI is triggered from the command line interface and can be accessed through any browser. Once you see a confirmation message on your terminal you can access it on your browser. Command Teanga start triggers the Teanga UI and optionally you can give a port parameter teanga start -p {port number}","title":"Start teanga"},{"location":"start_teanga/#teanga-ui","text":"The teanga UI is triggered from the command line interface and can be accessed through any browser. Once you see a confirmation message on your terminal you can access it on your browser.","title":"Teanga UI"},{"location":"start_teanga/#command","text":"Teanga start triggers the Teanga UI and optionally you can give a port parameter teanga start -p {port number}","title":"Command"},{"location":"stop_teanga/","text":"Stopping teanga The teanga UI is triggered from the command line interface and can be accessed through any browser. After finishing use the UI you can simply go to your terminal and use the teanga stop command Command ` teanga stop `","title":"Stop teanga"},{"location":"stop_teanga/#stopping-teanga","text":"The teanga UI is triggered from the command line interface and can be accessed through any browser. After finishing use the UI you can simply go to your terminal and use the teanga stop command","title":"Stopping teanga"},{"location":"stop_teanga/#command","text":"` teanga stop `","title":"Command"},{"location":"things_to_keep_in_mind/","text":"teanga assumes you are running the commands from the root folder of the project Teanga use the default folders openapi-specifications, workflows, files, outputs Teanga use the pretallod docker hub repo, using the month tag -> i will change to a latest tag the cli assumes all parameters are given in the format -p value , -p2 value2 the cli assumes that two first parameters are [COMMAND] and [SERVICE] if num of params is 1 it is a command start command is only valid without params teanga stop command should be idempotent running more than once does not anything teanga start command should be idempotent running more than once does not anything if you create two workflow with the same filename it will overwrite the first one We assume the content response of an endpoint in the openapi spec is either application/json or text/plain this happens in Workflow.py the flattening operation spec function","title":"Things to keep in mind"}]}